# import Link, LinkSubscriptionPayload, Vote, VoteSubscriptionPayload, LinkOrderByInput from "./database/generated/prisma.graphql"

type Query {
  info: String!
  feed (filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed! # skip/first used for pagination. skip == start index; first == limit
  link (id: ID!): Link
}

type Mutation {
  post (url: String!, description: String!): Link!
  signup (email: String!, password: String!, name: String!): AuthPayload
  login (email: String!, password: String!): AuthPayload
  updateLink (id: ID!, url: String, description: String): Link
  deleteLink (id: ID!): Link
  vote (linkId: ID!): Vote
}

type Subscription {
  newLink: LinkSubscriptionPayload
  newVote: VoteSubscriptionPayload
}

type AuthPayload {
  token: String!
  user: User
}

type User {
  id: ID!
  name: String
  email: String!
  links: [Link!]!
}

type Feed {
  links: [Link!]!
  count: Int!
}